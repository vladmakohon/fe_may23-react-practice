{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","categoryFromServer","user","usersFromServer","userFromServer","App","useState","selectedUserId","setSelectedUserId","query","setQuery","selectedCategories","setSelectedCategories","visibleProducts","allProducts","userIdFilter","nameFilter","categoriesIdFilter","preparedGoods","filter","normalizedNameFilter","trim","toLowerCase","includes","length","getPreparedProducts","className","onClick","href","classNames","onChange","event","target","value","type","placeholder","categoryIdToRemove","categoryIdToAdd","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bfa6835.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(categoryFromServer => (\n    categoryFromServer.id === product.categoryId\n  )) || null;\n  const user = usersFromServer.find(userFromServer => (\n    userFromServer.id === category.ownerId\n  )) || null;\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst getPreparedProducts = (\n  allProducts,\n  userIdFilter,\n  nameFilter,\n  categoriesIdFilter,\n) => {\n  let preparedGoods = [...allProducts];\n\n  if (userIdFilter) {\n    preparedGoods = preparedGoods\n      .filter(product => product.user.id === userIdFilter);\n  }\n\n  if (nameFilter) {\n    const normalizedNameFilter = nameFilter.trim().toLowerCase();\n\n    preparedGoods = preparedGoods.filter(product => (\n      product.name.toLowerCase().includes(normalizedNameFilter)\n    ));\n  }\n\n  if (categoriesIdFilter.length !== 0) {\n    preparedGoods = preparedGoods\n      .filter(product => categoriesIdFilter.includes(product.categoryId));\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  const visibleProducts = getPreparedProducts(\n    products,\n    selectedUserId,\n    query,\n    selectedCategories,\n  );\n\n  const resetAllFilters = () => {\n    setSelectedUserId(0);\n    setQuery('');\n    setSelectedCategories([]);\n  };\n\n  const selectCategory = (categoryIdToAdd) => {\n    setSelectedCategories([\n      ...selectedCategories,\n      categoryIdToAdd,\n    ]);\n  };\n\n  const unselectCategory = (categoryIdToRemove) => {\n    setSelectedCategories(\n      selectedCategories\n        .filter(categoryId => categoryId !== categoryIdToRemove),\n    );\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                onClick={() => setSelectedUserId(0)}\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={classNames({\n                  'is-active': selectedUserId === 0,\n                })}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  onClick={() => setSelectedUserId(user.id)}\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  className={classNames({\n                    'is-active': user.id === selectedUserId,\n                  })}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  onChange={event => setQuery(event.target.value)}\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      onClick={() => setQuery('')}\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                onClick={() => setSelectedCategories([])}\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                // className=\"button is-success mr-6 is-outlined\"\n                className={classNames('button', 'is-success', 'mr-6', {\n                  'is-outlined': selectedCategories.length !== 0,\n                })}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  onClick={() => (\n                    selectedCategories.includes(category.id)\n                      ? unselectCategory(category.id)\n                      : selectCategory(category.id)\n                  )}\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={classNames('button', 'mr-2', 'my-1', {\n                    'is-info': selectedCategories.includes(category.id),\n                  })}\n                  href=\"#/\"\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                onClick={resetAllFilters}\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {visibleProducts.length === 0\n            ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            ) : (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        ID\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Product\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className=\"fas fa-sort-down\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Category\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        User\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {visibleProducts.map(product => (\n                    <tr data-cy=\"Product\" key={product.id}>\n                      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                        {product.id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">\n                        {product.name}\n                      </td>\n                      <td data-cy=\"ProductCategory\">\n                        {`${product.category.icon} - ${product.category.title}`}\n                      </td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={classNames({\n                          'has-text-link': product.user.sex === 'm',\n                          'has-text-danger': product.user.sex === 'f',\n                        })}\n                      >\n                        {product.user.name}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}